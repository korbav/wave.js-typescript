{
  "name": "wave.js-typescript",
  "version": "2.0.0",
  "description": "Audio visualizer library for typescript/javascript (20+ designs).",
  "license": "MIT",
  "author": "Austin Michaud",
  "homepage": "https://foobar404.github.io/Wave.js/#/",
  "repository": {
    "type": "git",
    "url": "https://github.com/foobar404/Wave.js.git"
  },
  "bugs": {
    "url": "https://github.com/foobar404/Wave.js/issues"
  },
  "keywords": [
    "audio",
    "visualizer",
    "wave",
    "sound",
    "music",
    "canvas"
  ],
  "main": "dist/bundle.js",
  "types": "dist/bundle.d.ts",
  "directories": {
    "examples": "examples"
  },
  "files": [
    "dist/bundle.js"
  ],
  "scripts": {
    "test": "jest",
    "test-coverage": "jest --coverage",
    "test-watch": "jest --watch",
    "build": "webpack",
    "build-watch": "npx watch \"npm run build\" ./src",
    "build-run": "npm run build && npm run server",
    "server": "npm run example-from-element",
    "example-from-element": "npx http-server ./ -o ./examples/fromElement.html -c-1",
    "example-from-file": "npx http-server ./ -o ./examples/fromFile.html -c-1",
    "example-from-stream": "npx http-server ./ -o ./examples/fromStream.html -c-1",
    "lint": "eslint ."
  },
  "dependencies": {
    "audio-context-polyfill": "^1.0.0",
    "lodash": "*"
  },
  "devDependencies": {
    "@types/jest": "^27.0.2",
    "@typescript-eslint/eslint-plugin": "^4.31.2",
    "@typescript-eslint/parser": "^4.31.2",
    "eslint": "^7.32.0",
    "eslint-plugin-import-quotes": "^0.0.1",
    "eslint-plugin-unused-imports": "^1.1.4",
    "http-server": "^13.0.2",
    "jest": "^27.2.1",
    "jsdom": "^17.0.0",
    "stream-mock": "^2.0.5",
    "ts-jest": "^27.0.5",
    "ts-loader": "^9.2.6",
    "typescript": "^4.4.3",
    "webpack": "^5.53.0",
    "webpack-cli": "^4.8.0"
  },
  "jest": {
    "modulePathIgnorePatterns": [
      "<rootDir>\\package.json"
    ],
    "preset": "ts-jest",
    "testEnvironment": "node",
    "transform": {
      "^.+\\.ts?$": "ts-jest"
    },
    "testMatch": [
      "**/*.test.ts"
    ],
    "globals": {
      "window": {}
    },
    "verbose": true,
    "restoreMocks": true,
    "clearMocks": true,
    "resetMocks": true,
    "setupFiles": [
      "./__mocks__/client.ts"
    ]
  }
}
